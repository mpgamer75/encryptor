.\" Man file for Encryptor v2.1.0
.TH ENCRYPTOR 1 "2025-10-21" "2.1.0" "Encryptor User Manual"

.SH NAME
encryptor \- Advanced command-line file encryption tool

.SH SYNOPSIS
.B encryptor
[\fIOPTIONS\fR]

.SH DESCRIPTION
.B encryptor
is an interactive Bash-based tool for file encryption, decryption, and certificate management via a secure Text User Interface (TUI).
It uses \fBopenssl(1)\fR for all cryptographic operations and aims to simplify complex security procedures by enforcing modern standards.

The tool runs in interactive mode if launched without arguments.

.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Displays a brief help message and exits.
.TP
.BR \-v ", " \-\-version
Displays the version number of \fBencryptor\fR and exits.

.SH INTERACTIVE INTERFACE
The main menu provides access to all modules:

.TP
.B [1] List Files
Displays the current directory's contents with a simplified interface, separating directories and files and showing human-readable sizes.

.TP
.B [2] Encrypt a File
Starts the encryption wizard. It guides the user through:
.RS
.IP "1." 4
Selecting a file (via a numbered selector).
.IP "2." 4
Choosing a modern algorithm (AES-GCM, ChaCha20-Poly1305, S/MIME).
.IP "3." 4
Providing the key (password or recipient certificate).
.IP "4." 4
Generates an encryption report detailing the operation and decryption instructions.
.RE

.TP
.B [3] Decrypt a File
Starts the decryption wizard. It prompts for:
.RS
.IP "1." 4
The file to decrypt.
.IP "2." 4
The algorithm used during encryption.
.IP "3." 4
The corresponding key (password or private key file).
.IP "4." 4
Generates a \fI.dec\fR file and an operation report.
.RE

.TP
.B [4] Certificate Manager (X.509)
Opens the PKI and S/MIME certificate management module:
.RS
.IP "•" 4
Create a self-signed Root Certificate Authority (CA).
.IP "•" 4
Generate an RSA private key and a Certificate Signing Request (CSR).
.IP "•" 4
Sign a CSR with the Root CA to issue a new certificate.
.IP "•" 4
Inspect the contents of a certificate or CSR.
.RE

.TP
.B [5] Security Audit
Performs security checks via a submenu:
.RS
.IP "•" 4
\fBLocal System Audit:\fR Checks OpenSSL version and private key permissions in the config directory.
.IP "•" 4
\fBtestssl.sh:\fR Provides an interface to install and run the \fBtestssl.sh\fR tool for scanning remote server TLS/SSL configurations.
.RE

.TP
.B [h] Help
Displays a simple help message.

.TP
.B [l] View Logs
Opens the log file \fI$HOME/.config/encryptor/encryptor.log\fR using \fBless(1)\fR.

.SH SUPPORTED ALGORITHMS
.B encryptor
v2.0+ intentionally restricts its algorithm selection to modern, secure ciphers that provide Authenticated Encryption with Associated Data (AEAD). This prevents the use of weak or deprecated modes like CBC or ECB.

.TP
.B Symmetric (Password-based)
.RS
.IP "•" 4
\fBAES-256-GCM (Recommended)\fR: The industry standard for authenticated symmetric encryption. Requires OpenSSL 1.1.1 or newer.
.IP "•" 4
\fBChaCha20-Poly1305\fR: A modern, high-performance alternative to AES, widely used in TLS 1.3.
.RE

.TP
.B Asymmetric (Certificate-based)
.RS
.IP "•" 4
\fBS/MIME\fR: Encrypts a file for a recipient using their X.509 public certificate. This is the standard for secure email and document exchange. Uses AES-256-GCM internally.
.RE

.SH FILES
.TP
\fI$HOME/.config/encryptor/encryptor.log\fR
Main log file for operations and errors.
.TP
\fI$HOME/.config/encryptor/certs/\fR
Default directory for keys, CSRs, and certificates generated by the manager.
.TP
\fI$HOME/.config/encryptor/tools/testssl.sh/\fR
Default installation path for the \fBtestssl.sh\fR audit tool.
.TP
\fI/tmp/encryptor_$$\fR
Temporary directory for operations, cleaned on exit.

.SH SECURITY
.B Encryptor
is a frontend for \fBopenssl(1)\fR. The security of encrypted files depends entirely on the strength of the user's password or the secure management of their private keys.

.B NEVER
share your private keys (.key). Permissions for these files should be set to 400 (read-only for user). The audit tool (option [5]) can help verify this.

AEAD ciphers (GCM, Poly1305) provide integrity and authenticity checks, meaning the tool can detect if a file has been tampered with or if the wrong password was used.

For S/MIME encryption, the recipient will need *their* matching private key and certificate to decrypt the file.

.SH AUTHOR
Written by mpgamer75.
v2.1 refactor and documentation by Gemini.

.SH SEE ALSO
.BR openssl(1),
.BR chmod(1),
.BR man(1),
.BR git(1)